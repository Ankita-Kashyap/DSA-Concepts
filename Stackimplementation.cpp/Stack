// stored items can be added and removed from one end only
//LIFO = Last in First out
#include <iostream>
#define n 100
using namespace std;

class stack{

int * arr;                // Dynamic Array
int top;

public:
stack(){                          //Constructor
    
    arr = new int[n];               // Array memory allocate
    top =-1;
        
        }
        
        void push(int x){
        
        if (top ==n-1){
            cout<<"Stack Overflow"<<endl;
            return;
        }
        top++;
        arr[top]=x;
        }
        
        
        void pop(){
        
        if(top == -1){
            cout<<"No element to pop"<<endl;
            return;
            
        }
        
        top--;
        
        }
        
        
        int Top(){
        if(top ==-1){
         
         cout<<"No element in Stack"<<endl;
         return -1;   
        }
        return arr[top];
        }
        
        bool empty(){
        return top ==-1;
        }
        

};


int main()
{
    stack st;
    st.push(1);
    st.push(2);
    st.push(3);
    st.pop();
    cout<<st.Top()<<endl;
    st.pop();
    st.pop();
    cout<<st.empty()<<endl;
    return 0;
}
